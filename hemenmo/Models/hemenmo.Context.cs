//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hemenmo.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class hemenmoContainer : DbContext
    {
        public hemenmoContainer()
            : base("name=hemenmoContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int sp_delete_game(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_game", idParameter);
        }
    
        public virtual int sp_insert_game(string name, string name_seo, Nullable<int> cat_id, string gameplay_url, string smallimage, string bigimage, string title, string description, string embed_code, string spot, Nullable<int> rating, Nullable<int> play_count, Nullable<int> likes, Nullable<int> dislikes, Nullable<int> rozet)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var name_seoParameter = name_seo != null ?
                new ObjectParameter("name_seo", name_seo) :
                new ObjectParameter("name_seo", typeof(string));
    
            var cat_idParameter = cat_id.HasValue ?
                new ObjectParameter("cat_id", cat_id) :
                new ObjectParameter("cat_id", typeof(int));
    
            var gameplay_urlParameter = gameplay_url != null ?
                new ObjectParameter("gameplay_url", gameplay_url) :
                new ObjectParameter("gameplay_url", typeof(string));
    
            var smallimageParameter = smallimage != null ?
                new ObjectParameter("smallimage", smallimage) :
                new ObjectParameter("smallimage", typeof(string));
    
            var bigimageParameter = bigimage != null ?
                new ObjectParameter("bigimage", bigimage) :
                new ObjectParameter("bigimage", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var embed_codeParameter = embed_code != null ?
                new ObjectParameter("embed_code", embed_code) :
                new ObjectParameter("embed_code", typeof(string));
    
            var spotParameter = spot != null ?
                new ObjectParameter("spot", spot) :
                new ObjectParameter("spot", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("rating", rating) :
                new ObjectParameter("rating", typeof(int));
    
            var play_countParameter = play_count.HasValue ?
                new ObjectParameter("play_count", play_count) :
                new ObjectParameter("play_count", typeof(int));
    
            var likesParameter = likes.HasValue ?
                new ObjectParameter("likes", likes) :
                new ObjectParameter("likes", typeof(int));
    
            var dislikesParameter = dislikes.HasValue ?
                new ObjectParameter("dislikes", dislikes) :
                new ObjectParameter("dislikes", typeof(int));
    
            var rozetParameter = rozet.HasValue ?
                new ObjectParameter("rozet", rozet) :
                new ObjectParameter("rozet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_game", nameParameter, name_seoParameter, cat_idParameter, gameplay_urlParameter, smallimageParameter, bigimageParameter, titleParameter, descriptionParameter, embed_codeParameter, spotParameter, ratingParameter, play_countParameter, likesParameter, dislikesParameter, rozetParameter);
        }
    
        public virtual ObjectResult<sp_list_games_Result> sp_list_games()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_list_games_Result>("sp_list_games");
        }
    
        public virtual int sp_update_game(Nullable<int> id, string name, string name_seo, Nullable<int> cat_id, string gameplay_url, string smallimage, string bigimage, string title, string description, string embed_code, string spot, Nullable<int> rozet)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var name_seoParameter = name_seo != null ?
                new ObjectParameter("name_seo", name_seo) :
                new ObjectParameter("name_seo", typeof(string));
    
            var cat_idParameter = cat_id.HasValue ?
                new ObjectParameter("cat_id", cat_id) :
                new ObjectParameter("cat_id", typeof(int));
    
            var gameplay_urlParameter = gameplay_url != null ?
                new ObjectParameter("gameplay_url", gameplay_url) :
                new ObjectParameter("gameplay_url", typeof(string));
    
            var smallimageParameter = smallimage != null ?
                new ObjectParameter("smallimage", smallimage) :
                new ObjectParameter("smallimage", typeof(string));
    
            var bigimageParameter = bigimage != null ?
                new ObjectParameter("bigimage", bigimage) :
                new ObjectParameter("bigimage", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var embed_codeParameter = embed_code != null ?
                new ObjectParameter("embed_code", embed_code) :
                new ObjectParameter("embed_code", typeof(string));
    
            var spotParameter = spot != null ?
                new ObjectParameter("spot", spot) :
                new ObjectParameter("spot", typeof(string));
    
            var rozetParameter = rozet.HasValue ?
                new ObjectParameter("rozet", rozet) :
                new ObjectParameter("rozet", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_game", idParameter, nameParameter, name_seoParameter, cat_idParameter, gameplay_urlParameter, smallimageParameter, bigimageParameter, titleParameter, descriptionParameter, embed_codeParameter, spotParameter, rozetParameter);
        }
    
        public virtual ObjectResult<sep_list_categories_Result> sep_list_categories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sep_list_categories_Result>("sep_list_categories");
        }
    
        public virtual ObjectResult<sp_get_game_Result> sp_get_game(string name_seo)
        {
            var name_seoParameter = name_seo != null ?
                new ObjectParameter("name_seo", name_seo) :
                new ObjectParameter("name_seo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_game_Result>("sp_get_game", name_seoParameter);
        }
    
        public virtual ObjectResult<sp_list_slider_Result> sp_list_slider()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_list_slider_Result>("sp_list_slider");
        }
    
        public virtual int set_dislike(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("set_dislike", idParameter);
        }
    
        public virtual int set_like(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("set_like", idParameter);
        }
    
        public virtual int set_play_count(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("set_play_count", idParameter);
        }
    
        public virtual int set_rating(Nullable<int> id, Nullable<int> vote)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var voteParameter = vote.HasValue ?
                new ObjectParameter("vote", vote) :
                new ObjectParameter("vote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("set_rating", idParameter, voteParameter);
        }
    
        public virtual int sp_add_categry(string category, string seo_url, Nullable<int> top_menu, Nullable<int> panel, string icon, string description)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var seo_urlParameter = seo_url != null ?
                new ObjectParameter("seo_url", seo_url) :
                new ObjectParameter("seo_url", typeof(string));
    
            var top_menuParameter = top_menu.HasValue ?
                new ObjectParameter("top_menu", top_menu) :
                new ObjectParameter("top_menu", typeof(int));
    
            var panelParameter = panel.HasValue ?
                new ObjectParameter("panel", panel) :
                new ObjectParameter("panel", typeof(int));
    
            var iconParameter = icon != null ?
                new ObjectParameter("icon", icon) :
                new ObjectParameter("icon", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_categry", categoryParameter, seo_urlParameter, top_menuParameter, panelParameter, iconParameter, descriptionParameter);
        }
    
        public virtual int sp_add_slider(string image, Nullable<int> order, string link, Nullable<int> active)
        {
            var imageParameter = image != null ?
                new ObjectParameter("image", image) :
                new ObjectParameter("image", typeof(string));
    
            var orderParameter = order.HasValue ?
                new ObjectParameter("order", order) :
                new ObjectParameter("order", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("active", active) :
                new ObjectParameter("active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_add_slider", imageParameter, orderParameter, linkParameter, activeParameter);
        }
    
        public virtual int sp_del_categry(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_del_categry", idParameter);
        }
    
        public virtual int sp_del_slider(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_del_slider", idParameter);
        }
    
        public virtual int sp_update_categry(Nullable<int> id, string category, string seo_url, Nullable<int> top_menu, Nullable<int> panel, string icon, string description)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var seo_urlParameter = seo_url != null ?
                new ObjectParameter("seo_url", seo_url) :
                new ObjectParameter("seo_url", typeof(string));
    
            var top_menuParameter = top_menu.HasValue ?
                new ObjectParameter("top_menu", top_menu) :
                new ObjectParameter("top_menu", typeof(int));
    
            var panelParameter = panel.HasValue ?
                new ObjectParameter("panel", panel) :
                new ObjectParameter("panel", typeof(int));
    
            var iconParameter = icon != null ?
                new ObjectParameter("icon", icon) :
                new ObjectParameter("icon", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_categry", idParameter, categoryParameter, seo_urlParameter, top_menuParameter, panelParameter, iconParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_user_login(string uname, string pass)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_user_login", unameParameter, passParameter);
        }
    
        public virtual int sp_store_the_click_id(string click_id)
        {
            var click_idParameter = click_id != null ?
                new ObjectParameter("click_id", click_id) :
                new ObjectParameter("click_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_store_the_click_id", click_idParameter);
        }

        public virtual void sp_update_the_click_id(string click_id, int goal)
        {
            var click_idParameter = new ObjectParameter("click_id", click_id);

            var goal_Parameter = new ObjectParameter("goal", goal);

            ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_update_the_click_id", click_idParameter, goal_Parameter);
        }
    }
}
